---
title: "Analyses"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r setup}
options(digits = 4)
options(scipen = 999)

all_data <- read_csv("Data/all_data.csv")
```

```{r acceptability}
#Acceptability total overall
all_data %>%
  summarize(
    mean_total = mean(pi_pfs_sum),
    sd_total = sd(pi_pfs_sum),
    mean_item = mean_total / 7,
    sd_item = sd_total / 7)

#Acceptability by item overall
all_data %>%
  select(pi_pfs_1:pi_pfs_7) %>%
  pivot_longer(everything()) %>%
  group_by(name) %>%
  summarize(mean = mean(value), 
            sd = sd(value))

#Acceptability total English
all_data %>%
  filter(language == "English") %>% 
  summarize(
    mean_total = mean(pi_pfs_sum),
    sd_total = sd(pi_pfs_sum),
    mean_item = mean_total / 7,
    sd_item = sd_total / 7)

#Acceptability by item English
all_data %>%
   filter(language == "English") %>% 
  select(pi_pfs_1:pi_pfs_7) %>%
  pivot_longer(everything()) %>%
  group_by(name) %>%
  summarize(mean = mean(value), 
            sd = sd(value))

#Acceptability total Spanish
all_data %>%
  filter(language == "Spanish") %>% 
  summarize(
    mean_total = mean(pi_pfs_sum),
    sd_total = sd(pi_pfs_sum),
    mean_item = mean_total / 7,
    sd_item = sd_total / 7)

#Acceptability by item Spanish
all_data %>%
   filter(language == "Spanish") %>% 
  select(pi_pfs_1:pi_pfs_7) %>%
  pivot_longer(everything()) %>%
  group_by(name) %>%
  summarize(mean = mean(value), 
            sd = sd(value))

#Acceptability total More Education
all_data %>%
  filter(dem_education_dichotomized == "More Education") %>% 
  summarize(
    mean_total = mean(pi_pfs_sum),
    sd_total = sd(pi_pfs_sum),
    mean_item = mean_total / 7,
    sd_item = sd_total / 7)

#Acceptability by item More Education
all_data %>%
   filter(dem_education_dichotomized == "More Education") %>% 
  select(pi_pfs_1:pi_pfs_7) %>%
  pivot_longer(everything()) %>%
  group_by(name) %>%
  summarize(mean = mean(value), 
            sd = sd(value))

#Acceptability total Less Education
all_data %>%
  filter(dem_education_dichotomized == "Less Education") %>% 
  summarize(
    mean_total = mean(pi_pfs_sum),
    sd_total = sd(pi_pfs_sum),
    mean_item = mean_total / 7,
    sd_item = sd_total / 7)

#Acceptability by item Less Education
all_data %>%
   filter(dem_education_dichotomized == "Less Education") %>% 
  select(pi_pfs_1:pi_pfs_7) %>%
  pivot_longer(everything()) %>%
  group_by(name) %>%
  summarize(mean = mean(value), 
            sd = sd(value))

#Acceptability total Private Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Private Insurance") %>% 
  summarize(
    mean_total = mean(pi_pfs_sum),
    sd_total = sd(pi_pfs_sum),
    mean_item = mean_total / 7,
    sd_item = sd_total / 7)

#Acceptability by item Private Insurance
all_data %>%
   filter(dem_insurancetype_emr == "Private Insurance") %>% 
  select(pi_pfs_1:pi_pfs_7) %>%
  pivot_longer(everything()) %>%
  group_by(name) %>%
  summarize(mean = mean(value), 
            sd = sd(value))

#Acceptability total Public Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Public Insurance") %>% 
  summarize(
    mean_total = mean(pi_pfs_sum),
    sd_total = sd(pi_pfs_sum),
    mean_item = mean_total / 7,
    sd_item = sd_total / 7)

#Acceptability by item Public Insurance
all_data %>%
   filter(dem_insurancetype_emr == "Public Insurance") %>% 
  select(pi_pfs_1:pi_pfs_7) %>%
  pivot_longer(everything()) %>%
  group_by(name) %>%
  summarize(mean = mean(value), 
            sd = sd(value))
```

```{r acceptability - individual level}
#Historgrams of acceptability ratings for each item

#Data setup
pfs_long <- all_data %>%
  filter(!is.na(pi_pfs_sum)) %>%
  select(Participant_ID, language, dem_education_dichotomized, dem_insurancetype_emr, pi_pfs_1:pi_pfs_7) %>%
  pivot_longer(
    cols = starts_with("pi_pfs_"),
    names_to = "item",
    values_to = "score"
  ) %>%
  mutate(
    item = str_remove(item, "^pi_pfs_"),
    item = paste0("Item ", item),
    item = factor(item, levels = paste0("Item ", 1:7)))

#Grouped by language
pfs_long_by_item_plot_language <- ggplot(pfs_long, aes(x = score, fill = language)) +
  geom_bar(position = "dodge") +
  facet_wrap(~ item, ncol = 3) +
  theme_minimal(base_size = 12) +
  labs(
    x = "Acceptability Score",
    y = "Participant Count",
    fill = "Language",
    title = "Distribution of Acceptability Scores by Item"
  ) +
  scale_fill_manual(values = c("English" = "steelblue", "Spanish" = "firebrick")) +
  scale_x_continuous(breaks = 1:5) + 
  scale_y_continuous(breaks = seq(0, 25, 2)) +
    theme(panel.spacing = unit(1, "lines"))
ggsave("~/Desktop/pfs_long_by_item_plot_language.png", plot = pfs_long_by_item_plot_language, width = 8, height = 6, units = "in", dpi = 300)

#Grouped by education
pfs_long_by_item_plot_education <- ggplot(pfs_long, aes(x = score, fill = dem_education_dichotomized)) +
  geom_bar(position = "dodge") +
  facet_wrap(~ item, ncol = 3) +
  theme_minimal(base_size = 12) +
  labs(
    x = "Acceptability Score",
    y = "Participant Count",
    fill = "Education",
    title = "Distribution of Acceptability Scores by Item"
  ) +
  scale_fill_manual(values = c("More Education" = "darkgreen", "Less Education" = "darkgoldenrod1")) +
  scale_x_continuous(breaks = 1:5) + 
  scale_y_continuous(breaks = seq(0, 25, 2)) +
    theme(panel.spacing = unit(1, "lines"))
ggsave("~/Desktop/pfs_long_by_item_plot_education.png", plot = pfs_long_by_item_plot_education, width = 8, height = 6, units = "in", dpi = 300)

#Grouped by insurance type
pfs_long_by_item_plot_insurance <- ggplot(pfs_long, aes(x = score, fill = dem_insurancetype_emr)) +
  geom_bar(position = "dodge") +
  facet_wrap(~ item, ncol = 3) +
  theme_minimal(base_size = 12) +
  labs(
    x = "Acceptability Score",
    y = "Participant Count",
    fill = "Insurance Type",
    title = "Distribution of Acceptability Scores by Item"
  ) +
  scale_fill_manual(values = c("Public Insurance" = "darkorchid4", "Private Insurance" = "cyan3")) +
  scale_x_continuous(breaks = 1:5) + 
  scale_y_continuous(breaks = seq(0, 25, 2)) +
    theme(panel.spacing = unit(1, "lines"))
ggsave("~/Desktop/pfs_long_by_item_plot_insurance.png", plot = pfs_long_by_item_plot_insurance, width = 8, height = 6, units = "in", dpi = 300)

#Plot of each participant's overall acceptability rating

#Data setup
pfs_average_scores <- all_data %>%
  filter(!is.na(pi_pfs_sum)) %>%
  mutate(
    acceptability_mean = pi_pfs_sum / 7
  ) %>%
  select(Participant_ID, language, dem_education_dichotomized, dem_insurancetype_emr, acceptability_mean)

#Grouped by language
pfs_average_scores_plot_language <- ggplot(pfs_average_scores, aes(x = "", y = acceptability_mean, color = language)) +
  geom_jitter(width = 0.2, height = 0, size = 3) +
   geom_hline(
    yintercept = mean(pfs_average_scores$acceptability_mean, na.rm = TRUE),
    linetype = "dashed",
    color = "black",
    size = 1
  ) +
  theme_minimal(base_size = 12) +
  labs(
    x = NULL,
    y = "Mean Acceptability Score",
    title = "Overall Acceptability by Participant",
    color = "Language"
  ) +
  scale_y_continuous(limits = c(1, 5), breaks = seq(1, 5, 0.5)) +
  scale_color_manual(values = c("English" = "steelblue", "Spanish" = "firebrick")) +
  theme(
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank()
  )
ggsave("~/Desktop/pfs_average_scores_plot_language.png", plot = pfs_average_scores_plot_language, width = 8, height = 6, units = "in", dpi = 300)

#Grouped by education
pfs_average_scores_plot_education <- ggplot(pfs_average_scores, aes(x = "", y = acceptability_mean, color = dem_education_dichotomized)) +
  geom_jitter(width = 0.2, height = 0, size = 3) +
   geom_hline(
    yintercept = mean(pfs_average_scores$acceptability_mean, na.rm = TRUE),
    linetype = "dashed",
    color = "black",
    size = 1
  ) +
  theme_minimal(base_size = 12) +
  labs(
    x = NULL,
    y = "Mean Acceptability Score",
    title = "Overall Acceptability by Participant",
    color = "Education Level"
  ) +
  scale_y_continuous(limits = c(1, 5), breaks = seq(1, 5, 0.5)) +
  scale_color_manual(values = c("More Education" = "darkgreen", "Less Education" = "darkgoldenrod1")) +
  theme(
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank()
  )
ggsave("~/Desktop/pfs_average_scores_plot_education.png", plot = pfs_average_scores_plot_education, width = 8, height = 6, units = "in", dpi = 300)

#Grouped by insurance type
pfs_average_scores_plot_insurance <- ggplot(pfs_average_scores, aes(x = "", y = acceptability_mean, color = dem_insurancetype_emr)) +
  geom_jitter(width = 0.2, height = 0, size = 3) +
   geom_hline(
    yintercept = mean(pfs_average_scores$acceptability_mean, na.rm = TRUE),
    linetype = "dashed",
    color = "black",
    size = 1
  ) +
  theme_minimal(base_size = 12) +
  labs(
    x = NULL,
    y = "Mean Acceptability Score",
    title = "Overall Acceptability by Participant",
    color = "Insurance Type"
  ) +
  scale_y_continuous(limits = c(1, 5), breaks = seq(1, 5, 0.5)) +
  scale_color_manual(values = c("Public Insurance" = "darkorchid4", "Private Insurance" = "cyan3")) +
  theme(
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank()
  )
ggsave("~/Desktop/pfs_average_scores_plot_insurance.png", plot = pfs_average_scores_plot_insurance, width = 8, height = 6, units = "in", dpi = 300)
```

```{r patterns of use}
#Completion of study activities (using participant database)

#Invited
participant_database %>% 
  filter(invite_status == "Complete") %>% 
  count(invite_status) %>% 
  mutate(percent = (n / sum(n)) * 100)

#Baseline
participant_database %>% 
  filter(baseline_status == "Complete") %>% 
  count(baseline_status) %>% 
  mutate(percent = (n / 28) * 100)

#One-week follow-up
participant_database %>% 
  filter(oneweek_status == "Complete") %>% 
  count(oneweek_status) %>% 
  mutate(percent = (n / 28) * 100)

#Three-month follow-up
participant_database %>% 
  filter(threemonth_status == "Complete") %>% 
  count(threemonth_status) %>% 
  mutate(percent = (n / 28) * 100)

#Duration of SSI

#Without handling outliers
names_in_order <- all_data %>%
  select(ends_with("Page Submit")) %>%
  names()

#Put mean duration and sd for each page into a new data frame
page_durations <- all_data %>% 
  select(ends_with("Page Submit")) %>%
    mutate(across(everything(), ~ as.numeric(as.character(.)))) %>%
  pivot_longer(cols = everything(),
               names_to = "page",
               values_to = "duration") %>%
  group_by(page) %>%
  summarise(mean_duration = mean(duration, na.rm = T),
            sd_duration = sd(duration,  na.rm = T), .groups = "drop") 
page_durations #the Mean and SD of seconds spent on each page of the SSI

#Summarize duration
mean_sd_durations <- page_durations %>%
  summarize(mean_duration_seconds = sum(mean_duration, na.rm = TRUE), 
            sd_duration_seconds = sum(sd_duration, na.rm = TRUE), 
            .groups = "drop") %>%
  mutate(mean_duration_minutes = mean_duration_seconds / 60,
         sd_duration_minutes = sd_duration_seconds / 60)
View(mean_sd_durations) #huge SD even larger than the mean

#With handling outliers

#Look for outliers 
page_durations_long <- all_data %>% 
  select(ends_with("Page Submit")) %>%
  mutate(across(everything(), ~ as.numeric(as.character(.)))) %>%
  pivot_longer(cols = everything(),
               names_to = "page",
               values_to = "duration")
ggplot(page_durations_long, aes(x = page, y = duration)) +
  geom_boxplot(outlier.color = "red", outlier.shape = 16, outlier.size = 2) +
  theme_minimal() +
  labs(title = "Page Durations with Outliers",
       x = "Page",
       y = "Duration (seconds)")
#The data is super skewed with people keeping a page open for 1000+ seconds, so we will log transform it for visual clarity
ggplot(page_durations_long, aes(x = page, y = log(duration))) +
  geom_boxplot(outlier.color = "red", outlier.shape = 16, outlier.size = 2) +
  theme_minimal() +
  labs(title = "Page Durations with Outliers",
       x = "Page",
       y = "Log of Duration (seconds)")

#IQR method on raw data (not log transformed data)
page_durations_no_outliers <- page_durations_long %>%
  group_by(page) %>%
  mutate(
    Q1 = quantile(duration, 0.25, na.rm = TRUE),
    Q3 = quantile(duration, 0.75, na.rm = TRUE),
    IQR = Q3 - Q1,
    lower = Q1 - 1.5 * IQR,
    upper = Q3 + 1.5 * IQR) %>%
  ungroup() %>%
  filter(duration >= lower & duration <= upper)

page_durations_no_outliers_summary <- page_durations_no_outliers %>%
  group_by(page) %>%
  summarize(
    mean_duration = mean(duration, na.rm = TRUE),
    sd_duration = sd(duration, na.rm = TRUE),
    .groups = "drop"
  )

mean_sd_durations_no_outliers <- page_durations_no_outliers_summary %>%
  summarize(
    mean_duration_seconds = sum(mean_duration, na.rm = TRUE), 
    sd_duration_seconds = sum(sd_duration, na.rm = TRUE)
  ) %>%
  mutate(
    mean_duration_minutes = mean_duration_seconds / 60,
    sd_duration_minutes = sd_duration_seconds / 60
  )
View(mean_sd_durations_no_outliers)
```

```{r demographics}
all_data %>%
  count(dem_ethnicity) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>%
  count(dem_relationship) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>%
  count(dem_momdad) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>%
  count(dem_marital) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>%
  count(dem_education) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>%
  count(dem_caretaking) %>%
  mutate(percent = (n / sum(n))*100)

#Only asked if dem_caretaking is Yes/1
all_data %>%
  count(dem_live) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>%
  count(dem_income) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>%
  count(dem_familyhx) %>%
  mutate(percent = (n / sum(n))*100)

#Age as categories
all_data %>%
  count(dem_childage) %>%
  mutate(percent = (n / sum(n))*100)

#Age as mean/SD
all_data %>% 
  summarise(mean = mean(dem_childage, na.rm = TRUE),
            sd = sd(dem_childage, na.rm = TRUE))

all_data %>%
  count(dem_childgrade) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>%
  count(dem_childsex) %>%
  mutate(percent = (n / sum(n))*100)

childgender_tibble <- all_data %>%
  select(starts_with("dem_childgender")) %>% 
  summarize(across(everything(), 
                   list(n = ~ sum(. == 1),
                        percent = ~ mean(. == 1) * 100))) #child gender is select all that apply
View(childgender_tibble)

all_data %>%
  count(dem_childethnicity) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>%
  count(dem_insurancetype_emr) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>%
  count(dem_outofpocket) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>%
  count(dem_childEDtx) %>%
  mutate(percent = (n / sum(n))*100)

#Only asked if dem_childEDtx is Yes/1
all_data %>%
  select(starts_with("dem_txtype")) %>% 
  summarize(across(everything(), 
                   list(n = ~ sum(. == 1),
                        percent = ~ mean(. == 1) * 100))) #EDtx type is select all that apply

all_data %>%
  count(dem_medical) %>%
  mutate(percent = (n / sum(n))*100)

all_data %>% 
  summarise(mean = mean(dem_admitbmi, na.rm = TRUE),
            sd = sd(dem_admitbmi, na.rm = TRUE))

psych_tibble <- all_data %>%
  select(starts_with("dem_psych")) %>% 
  summarize(across(everything(), 
                   list(n = ~ sum(. == 1),
                        percent = ~ mean(. == 1) * 100))) #co-occuring psych is select all that apply
View(psych_tibble)
```

```{r pre-post preparedness}
#Item 1

#Create new variables for the pre-post change and to indicate if it was greater than 1
all_data <- all_data %>%
  mutate(
    distressnow_1_change_pre_post = pi_distressnow_1 - b_distressnow_1,
    distressnow_1_change_1plus = distressnow_1_change_pre_post >= 1
  )

#Overall
prepost1_overall <- all_data %>%
  summarise(
    n = n(),
    across(c(b_distressnow_1, pi_distressnow_1, distressnow_1_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_1_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost1_overall)

#English 
prepost1_english <- all_data %>%
   filter(language == "English") %>% 
  summarise(
    n = n(),
    across(c(b_distressnow_1, pi_distressnow_1, distressnow_1_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_1_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost1_english)

#Spanish
prepost1_spanish <- all_data %>%
   filter(language == "Spanish") %>% 
summarise(
    n = n(),
    across(c(b_distressnow_1, pi_distressnow_1, distressnow_1_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_1_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100) 
View(prepost1_spanish)

#More Education
prepost1_moreeducation <- all_data %>%
  filter(dem_education_dichotomized == "More Education") %>% 
   summarise(
    n = n(),
    across(c(b_distressnow_1, pi_distressnow_1, distressnow_1_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_1_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost1_moreeducation)

#Less Education
prepost1_lesseducation <- all_data %>%
   filter(dem_education_dichotomized == "Less Education") %>% 
 summarise(
    n = n(),
    across(c(b_distressnow_1, pi_distressnow_1, distressnow_1_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_1_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost1_lesseducation)

#Private Insurance
prepost1_private <- all_data %>%
   filter(dem_insurancetype_emr == "Private Insurance") %>% 
  summarise(
    n = n(),
    across(c(b_distressnow_1, pi_distressnow_1, distressnow_1_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_1_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost1_private)

#Public Insurance
prepost1_public <- all_data %>%
   filter(dem_insurancetype_emr == "Public Insurance") %>% 
summarise(
    n = n(),
    across(c(b_distressnow_1, pi_distressnow_1, distressnow_1_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_1_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost1_public)

#Item 2

#Create new variables for the pre-post change and to indicate if it was greater than 1
all_data <- all_data %>%
  mutate(
    distressnow_2_change_pre_post = pi_distressnow_2 - b_distressnow_2,
    distressnow_2_change_1plus = distressnow_2_change_pre_post >= 1
  )

#Overall
prepost2_overall <- all_data %>%
  summarise(
    n = n(),
    across(c(b_distressnow_2, pi_distressnow_2, distressnow_2_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_2_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost2_overall)

#English 
prepost2_english <- all_data %>%
   filter(language == "English") %>% 
summarise(
    n = n(),
    across(c(b_distressnow_2, pi_distressnow_2, distressnow_2_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_2_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost2_english)

#Spanish
prepost2_spanish <- all_data %>%
   filter(language == "Spanish") %>% 
 summarise(
    n = n(),
    across(c(b_distressnow_2, pi_distressnow_2, distressnow_2_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_2_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost2_spanish)

#More Education
prepost2_moreeducation <- all_data %>%
   filter(dem_education_dichotomized == "More Education") %>% 
  summarise(
    n = n(),
    across(c(b_distressnow_2, pi_distressnow_2, distressnow_2_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_2_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost2_moreeducation)

#Less Education
prepost2_lesseducation <- all_data %>%
   filter(dem_education_dichotomized == "Less Education") %>% 
  summarise(
    n = n(),
    across(c(b_distressnow_2, pi_distressnow_2, distressnow_2_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_2_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost2_lesseducation)

#Private Insurance
prepost2_private <- all_data %>%
   filter(dem_insurancetype_emr == "Private Insurance") %>% 
  summarise(
    n = n(),
    across(c(b_distressnow_2, pi_distressnow_2, distressnow_2_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_2_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost2_private)

#Public Insurance
prepost2_public <- all_data %>%
   filter(dem_insurancetype_emr == "Public Insurance") %>% 
  summarise(
    n = n(),
    across(c(b_distressnow_2, pi_distressnow_2, distressnow_2_change_pre_post),
           list(mean = mean, sd = sd), na.rm = TRUE),
    n_change1plus = sum(distressnow_2_change_1plus, na.rm = TRUE),
    percent_change1plus = (n_change1plus / n) * 100)
View(prepost2_public)
```

```{r medical record followup data}
#Overall
all_data %>% 
  summarise(mean = mean(admit_days, na.rm = TRUE),
            sd = sd(admit_days, na.rm = TRUE))

#Private Insurance
all_data %>% 
  filter(dem_insurancetype_emr == "Private Insurance") %>% 
  summarise(mean = mean(admit_days, na.rm = TRUE),
            sd = sd(admit_days, na.rm = TRUE))

#Public Insurance
all_data %>% 
  filter(dem_insurancetype_emr == "Public Insurance") %>% 
  summarise(mean = mean(admit_days, na.rm = TRUE),
            sd = sd(admit_days, na.rm = TRUE))

#Overall
all_data %>%
  count(twowk_medical_followup) %>%
  mutate(percent = (n / sum(n))*100)

#Private Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Private Insurance") %>% 
  count(twowk_medical_followup) %>%
  mutate(percent = (n / sum(n))*100)

#Public Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Public Insurance") %>% 
  count(twowk_medical_followup) %>%
  mutate(percent = (n / sum(n))*100)

#Overall
all_data %>%
  count(twowk_medical_weight) %>%
  mutate(percent = (n / sum(n))*100)

#Private Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Private Insurance") %>% 
  count(twowk_medical_weight) %>%
  mutate(percent = (n / sum(n))*100)

#Public Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Public Insurance") %>% 
  count(twowk_medical_weight) %>%
  mutate(percent = (n / sum(n))*100)

#Overall
all_data %>%
  count(threemo_medical_followup) %>%
  mutate(percent = (n / sum(n))*100)

#Private Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Private Insurance") %>% 
  count(threemo_medical_followup) %>%
  mutate(percent = (n / sum(n))*100)

#Public Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Public Insurance") %>% 
  count(threemo_medical_followup) %>%
  mutate(percent = (n / sum(n))*100)

#Overall
all_data %>%
  count(threemo_medical_weight) %>%
  mutate(percent = (n / sum(n))*100)

#Private Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Private Insurance") %>% 
  count(threemo_medical_weight) %>%
  mutate(percent = (n / sum(n))*100)

#Public Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Public Insurance") %>% 
  count(threemo_medical_weight) %>%
  mutate(percent = (n / sum(n))*100)

#Overall
all_data %>%
  count(twowk_mentalhealth) %>%
  mutate(percent = (n / sum(n))*100)

#Private Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Private Insurance") %>% 
  count(twowk_mentalhealth) %>%
  mutate(percent = (n / sum(n))*100)

#Public Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Public Insurance") %>% 
  count(twowk_mentalhealth) %>%
  mutate(percent = (n / sum(n))*100)

#Overall
all_data %>%
  count(threemo_mentalhealth) %>%
  mutate(percent = (n / sum(n))*100)

#Private Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Private Insurance") %>% 
  count(threemo_mentalhealth) %>%
  mutate(percent = (n / sum(n))*100)

#Public Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Public Insurance") %>% 
  count(threemo_mentalhealth) %>%
  mutate(percent = (n / sum(n))*100)

#Overall
all_data %>%
  count(sixmo_readmit) %>%
  mutate(percent = (n / sum(n))*100)

#Private Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Private Insurance") %>% 
  count(sixmo_readmit) %>%
  mutate(percent = (n / sum(n))*100)

#Public Insurance
all_data %>%
  filter(dem_insurancetype_emr == "Public Insurance") %>% 
  count(sixmo_readmit) %>%
  mutate(percent = (n / sum(n))*100)
```
